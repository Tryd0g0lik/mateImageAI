{"swagger": "2.0", "info": {"title": "MateImageAI API", "description": "API Documentation", "contact": {"email": "work@80mail.ru"}, "version": "v1"}, "host": "127.0.0.1:8000", "schemes": ["http"], "basePath": "/api/auth", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Bearer": {"type": "apiKey", "name": "Authorization", "in": "header"}}, "security": [{"Bearer": []}], "paths": {"/csrftoken/": {"get": {"operationId": "csrftoken_list", "description": "Получить CSRF токен", "parameters": [], "responses": {"200": {"description": "CSRF токен", "schema": {"type": "object", "properties": {"csrfToken": {"type": "string"}}}}, "400": {"description": "NOT OK"}}, "tags": ["Аутентификация"]}, "parameters": []}, "/register/": {"get": {"operationId": "register_list", "description": "\nUser admin can get all users list.\nPermissions if you is superuser.\n", "parameters": [], "responses": {"200": {"description": "Users array", "schema": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "example": 12}, "username": {"type": "string", "example": "nH2qGiehvEXjNiYqp3bOVtAYv...."}, "first_name": {"type": "string", "example": ""}, "last_name": {"type": "string", "example": ""}, "last_login": {"type": "string", "example": "2025-07-20 00:39:14.739 +0700"}, "is_superuser": {"type": "boolean", "example": false}, "is_staff": {"description": "user got permissions how superuser or not.", "type": "boolean", "example": false}, "is_active": {"type": "boolean", "example": false}, "date_joined": {"type": "string", "example": "2025-07-20 00:39:14.739 +0700"}, "created_at": {"type": "string", "example": "2025-07-20 00:39:14.739 +0700"}, "balance": {"type": "number", "example": "12587.268"}, "verification_code": {"description": "\n'<username>_null_jOePj2i769OQ4XsFPihlA....'\nThis is a code from  referral link. \n", "type": "string", "example": "_null_jOePj2i769OQ4XsFPihlA...."}, "is_sent": {"description": "\nReferral link was sent by user email address.\n", "type": "boolean", "example": true}}}}}, "401": {"description": "User admin is invalid"}, "500": {"description": "", "schema": {"title": "Mistake", "type": "object", "properties": {"data": {"type": "string"}}}}}, "tags": ["person"]}, "post": {"operationId": "register_create", "description": "\nMethod: POST and the fixed pathname of url  '/api/auth/register/'\nExample PATHNAME: \"/api/auth/register/\"\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"title": "BodyData", "required": ["username", "password"], "type": "object", "properties": {"username": {"type": "string", "example": "nH2qGiehvEXjNiYqp3bOVtAYv...."}, "password": {"type": "string", "example": "nH2qGiehvEXjNiYqp3bOVtAYv...."}}, "in": "body"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/UserResponseSerializer200"}}, "401": {"description": "", "schema": {"$ref": "#/definitions/ErrorResponse"}}, "500": {"description": "", "schema": {"$ref": "#/definitions/ErrorResponse"}}}, "tags": ["person"]}, "parameters": []}, "/register/0/login/": {"post": {"operationId": "register_0_login", "description": "\nMethod: POST and the fixed pathname of url  '/api/auth/register/0/login/'\nExample PATHNAME: \"/api/auth/register/0/login\"\n\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"title": "BodyData", "required": ["username", "password"], "type": "object", "properties": {"username": {"type": "string", "example": "nH2qGiehvEXjNiYqp3bOVtAYv...."}, "password": {"type": "string", "example": "nH2qGiehvEXjNiYqp3bOVtAYv...."}}, "in": "body"}}, {"name": "x-csrftoken", "in": "header", "type": "string", "example": {"x-csrftoken": "nH2qGiehvEXjNiYqp3bOVtAYv...."}, "title": "csr-ftoken"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Users"}}, "401": {"description": "", "schema": {"$ref": "#/definitions/ErrorResponse"}}, "400": {"description": "", "schema": {"$ref": "#/definitions/ErrorResponse"}}, "500": {"description": "", "schema": {"$ref": "#/definitions/ErrorResponse"}}}, "tags": ["person"]}, "parameters": []}, "/register/{id}/": {"get": {"operationId": "register_read", "description": "\"\n            You can gat data if you is the superuser or\n             index (it's parameter from the url path) for what retrieve data single user (if user index is pk).\n\n", "parameters": [{"name": "id", "in": "path", "type": "integer", "format": "int64", "example": 54, "title": "pk", "required": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UsersForSuperuser"}}, "401": {"description": "", "schema": {"$ref": "#/definitions/ErrorResponse"}}, "500": {"description": "", "schema": {"$ref": "#/definitions/ErrorResponse"}}}, "tags": ["person"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/register/{id}/logout/": {"patch": {"operationId": "register_logout", "description": "\nMethod: PARCH and the fixed pathname of url  '/api/auth/register/<int:pk>/login/'\nExample PATHNAME: \"/api/auth/register/83/login\"\n\n", "parameters": [{"name": "id", "in": "path", "description": "This is user's index  from 'auth/register/<int:pk>/login/'", "required": true, "type": "integer", "example": 12}, {"name": "AccessToken", "in": "header", "description": "This token has a prefix. It's 'Bearer ' - beginning of token. Example: 'Bearer gASVKAEAAAAAAACM...'", "required": true, "type": "string", "example": "nH2qGiehvEXjNiYqp3bOVtAYv...."}, {"name": "x-csrftoken", "in": "header", "description": "\n'AccessToken' It's key from the header of request.\n'csrftoken' token need have to the request.cookie.\nA csrftoken, you can get by API: 'api/auth/csrftoken/' and the method 'GET'.\n", "required": true, "type": "string", "example": "dsdWeweTwqwiehvdEXjNiYqp3bOVtAYv...."}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ErrorResponse"}}, "400": {"description": "Anonymous user"}, "401": {"description": "", "schema": {"$ref": "#/definitions/ErrorResponse"}}}, "tags": ["person"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}}, "definitions": {"UserResponseSerializer200": {"type": "object", "properties": {"data": {"title": "Data", "type": "string", "default": "OK", "minLength": 1}, "status": {"title": "Status", "type": "integer", "default": 200}}}, "ErrorResponse": {"required": ["data"], "type": "object", "properties": {"data": {"title": "Data", "type": "string", "minLength": 1}, "error": {"title": "Error", "type": "string", "minLength": 1}, "status_code": {"title": "Status code", "type": "integer", "default": 401}}}, "Users": {"required": ["username", "password"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "username": {"title": "Имя пользователя", "description": "Обязательное поле. Не более 150 символов. Только буквы, цифры и символы @/./+/-/_.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "email": {"title": "Адрес электронной почты", "type": "string", "format": "email", "maxLength": 254}, "password": {"title": "Пароль", "type": "string", "maxLength": 255, "minLength": 1}}}, "UsersForSuperuser": {"required": ["username"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "last_login": {"title": "Последний вход", "type": "string", "format": "date-time", "x-nullable": true}, "is_superuser": {"title": "Статус суперпользователя", "description": "Указывает, что пользователь имеет все права без явного их назначения.", "type": "boolean"}, "username": {"title": "Имя пользователя", "description": "Обязательное поле. Не более 150 символов. Только буквы, цифры и символы @/./+/-/_.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "first_name": {"title": "Имя", "type": "string", "maxLength": 150}, "last_name": {"title": "Фамилия", "type": "string", "maxLength": 150}, "email": {"title": "Адрес электронной почты", "type": "string", "format": "email", "maxLength": 254}, "is_staff": {"title": "Статус персонала", "description": "Отметьте, если пользователь может входить в административную часть сайта.", "type": "boolean"}, "is_active": {"title": "Активный", "description": "Отметьте, если пользователь должен считаться активным. Уберите эту отметку вместо удаления учётной записи.", "type": "boolean"}, "date_joined": {"title": "Дата регистрации", "type": "string", "format": "date-time"}, "is_sent": {"title": "Message was sent", "description": "Part is registration of new user.It is message sending to user's email. User indicates his email at the registrations moment.", "type": "boolean"}, "is_verified": {"title": "Is_verified", "type": "boolean"}, "verification_code": {"title": "Verification_code", "type": "string", "maxLength": 150, "minLength": 50, "x-nullable": true}, "balance": {"title": "Balance", "type": "number", "minimum": 0}, "created_at": {"title": "Created_at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated_at", "type": "string", "format": "date-time", "readOnly": true}}}}}